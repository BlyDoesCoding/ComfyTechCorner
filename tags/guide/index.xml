<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guide on Comfy Tech Corner</title><link>https://comfytechcorner.de/tags/guide/</link><description>Recent content in Guide on Comfy Tech Corner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 Jan 2024 10:00:00 +0000</lastBuildDate><atom:link href="https://comfytechcorner.de/tags/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>CasaOS</title><link>https://comfytechcorner.de/p/casaos/</link><pubDate>Tue, 16 Jan 2024 10:00:00 +0000</pubDate><guid>https://comfytechcorner.de/p/casaos/</guid><description>&lt;img src="https://comfytechcorner.de/p/casaos/cover.jpg" alt="Featured image of post CasaOS" />&lt;h2 id="exploring-casaos-for-server-revamp">Exploring CasaOS for Server Revamp
&lt;/h2>&lt;p>I was eager to revamp my home server and embarked on a quest for new software projects that could breathe fresh life into it. That&amp;rsquo;s when I stumbled upon &lt;a class="link" href="https://github.com/IceWhaleTech/CasaOS" target="_blank" rel="noopener"
>CasaOS&lt;/a>.&lt;/p>
&lt;h2 id="not-just-an-os-but-a-user-friendly-web-panel">Not Just an OS, But a User-Friendly Web Panel
&lt;/h2>&lt;p>Contrary to its name, CasaOS isn&amp;rsquo;t an operating system; rather, it&amp;rsquo;s a user-friendly web panel designed specifically for Linux servers. What caught my eye was its own &amp;ldquo;App Store,&amp;rdquo; a hub where I could effortlessly download popular server apps like Nextcloud or Jellyfin. The user interface is refreshingly minimalistic, making it a breeze to navigate. The installation process was a simple matter of copy-pasting a concise command. From the get-go, everything felt seamless.&lt;/p>
&lt;h2 id="seamless-setup-and-minimalistic-customization">Seamless Setup and Minimalistic Customization
&lt;/h2>&lt;p>Upon accessing the server&amp;rsquo;s IP, I set up a user account, and just like that, I was good to go. Initial exploration revealed options that, while minimal, struck me as strangely comforting, almost liminal. Apart from tweaking the widgets and perhaps the wallpaper, customization options were limited. Yet, I found this limitation to be a positive aspect. Too many choices can overwhelm new users, and CasaOS provides a user-friendly sanctuary in this regard.&lt;/p>
&lt;h2 id="simplicity-and-why-its-awesome">Simplicity and why it&amp;rsquo;s awesome
&lt;/h2>&lt;p>Comparing it to more complex options like Nextcloud, CasaOS stood out for its simplicity. Nextcloud, powerful as it is, can be daunting for newcomers. CasaOS, on the other hand, seamlessly integrates with its apps. Utilizing Docker, it facilitates the sharing of specific folders across applications. A prime example was the creation of media folders for Jellyfin, accessible both through the Jellyfin setup and CasaOS&amp;rsquo;s built-in file management tools. Uploading media became a simple act of dropping files into the Files app.
Testing various apps confirmed my initial impression—they were not only easy to use but also well-integrated. Another noteworthy aspect is CasaOS&amp;rsquo;s commitment to being fully open source; you can delve into its source code on &lt;a class="link" href="https://github.com/IceWhaleTech/CasaOS" target="_blank" rel="noopener"
>GitHub&lt;/a>.&lt;/p>
&lt;h2 id="who-would-benefit-from-casaos">Who Would Benefit from CasaOS?
&lt;/h2>&lt;p>So, who would benefit most from CasaOS? It&amp;rsquo;s a haven for new users, offering a straightforward installation and user-friendly interface. Even novices can revel in the convenience of one-click installs, ensuring a swift setup of various apps for those venturing into the realm of personal servers.&lt;/p>
&lt;p>For more information, you can visit their official website: &lt;a class="link" href="https://casaos.io/" target="_blank" rel="noopener"
>CasaOS&lt;/a>.&lt;/p></description></item><item><title>Accessing Knowledge Offline</title><link>https://comfytechcorner.de/p/offline-wikipedia/</link><pubDate>Tue, 24 Oct 2023 10:00:00 +0000</pubDate><guid>https://comfytechcorner.de/p/offline-wikipedia/</guid><description>&lt;img src="https://comfytechcorner.de/p/offline-wikipedia/cover.jpg" alt="Featured image of post Accessing Knowledge Offline" />&lt;h2 id="the-concept">The Concept
&lt;/h2>&lt;p>Accessing internet articles, like Wikipedia entries, is usually straightforward as they&amp;rsquo;re hosted on remote servers. However, problems can arise with slow, limited, or no internet access. Downloading web pages for offline reading is an option, but there&amp;rsquo;s a more elegant and convenient solution.&lt;/p>
&lt;h2 id="kiwix">Kiwix
&lt;/h2>&lt;p>Let me introduce you to Kiwix, an open-source app that simplifies downloading and reading web content, including Wikipedia, in a user-friendly format.&lt;/p>
&lt;p>You can find Kiwix on their website &lt;a class="link" href="https://kiwix.org" target="_blank" rel="noopener"
>here&lt;/a> or explore their GitHub page &lt;a class="link" href="https://github.com/kiwix" target="_blank" rel="noopener"
>here&lt;/a>. The best part is that Kiwix is available for almost every platform.&lt;/p>
&lt;h2 id="usage">Usage
&lt;/h2>&lt;p>I personally use Kiwix on my Android phone, which doesn&amp;rsquo;t always have a reliable internet connection. When you open the app, you&amp;rsquo;ll see three tabs at the bottom.&lt;/p>
&lt;p>Start by downloading the web content you&amp;rsquo;d like to read offline. I&amp;rsquo;ve downloaded various Wikipedia collections, such as science, history, and media. You can even download the entire Wikipedia if you prefer.&lt;/p>
&lt;p>Once your favorite articles, books, and media are downloaded, go to the library tab. Here, you can access all your downloads. Select the one you&amp;rsquo;re interested in and search for the section you want to read.&lt;/p>
&lt;p>It&amp;rsquo;s a simple and effective way to access important information without relying on your internet connection.&lt;/p>
&lt;h2 id="why-i-think-it-is-important">Why I Think It Is Important
&lt;/h2>&lt;p>Many countries face limited internet access, but access to information remains crucial. We&amp;rsquo;ve become accustomed to finding information for various situations, and not having that due to internet issues can be a significant drawback.&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>Kiwix is a wonderful open-source app that allows you to save and view articles offline, ensuring access to information in any situation while keeping it true to the original text&amp;rsquo;s essence.&lt;/p></description></item><item><title>Single GPU Passthrough Setup</title><link>https://comfytechcorner.de/p/vmgpupass/</link><pubDate>Mon, 23 Oct 2023 10:20:00 +0000</pubDate><guid>https://comfytechcorner.de/p/vmgpupass/</guid><description>&lt;img src="https://comfytechcorner.de/p/vmgpupass/cover.jpg" alt="Featured image of post Single GPU Passthrough Setup" />&lt;h1 id="the-problem">The Problem
&lt;/h1>&lt;p>Most people are used to running a single operating system on their PC—it&amp;rsquo;s the way it&amp;rsquo;s meant to be, and it usually works like a charm. But what if you need to test something on a different OS or want to use software only available on another one? The traditional approach would be to dual-boot or even triple-boot, but let&amp;rsquo;s be honest, that can be a bit of a headache.&lt;/p>
&lt;p>The problem with multiboot setups is that a Bootloader (often Windows) can mess with other bootloaders and leave you with an unbootable system. Managing your drives can also become a hassle since some operating systems use filesystems not supported by others.&lt;/p>
&lt;p>A more convenient solution for testing and using different operating systems is to turn to virtual machines. With VMs, you sidestep the issues associated with multiboot setups. However, there&amp;rsquo;s often a trade-off in terms of performance, with your CPU taking a hit, and GPU performance suffering. But what if I told you there&amp;rsquo;s a way to pass a GPU to your virtual machine, unlocking 100% graphics performance?&lt;/p>
&lt;p>This concept is known as GPU passthrough, and it works by unbinding GPU drivers from your base OS and rebinding the GPU to your virtual machine. The catch is that most guides on the internet require at least two GPUs, which can be a problem for those who can&amp;rsquo;t afford multiple graphics cards.&lt;/p>
&lt;h1 id="installation">Installation
&lt;/h1>&lt;h2 id="install-ubuntu">Install Ubuntu
&lt;/h2>&lt;p>Start with the latest version of Ubuntu Desktop as your base OS.&lt;/p>
&lt;h2 id="clone-repository">Clone Repository
&lt;/h2>&lt;p>Clone the following GitHub repository using the terminal:&lt;/p>
&lt;pre>&lt;code>git clone https://github.com/wabulu/Single-GPU-passthrough-amd-nvidia.git
&lt;/code>&lt;/pre>
&lt;h2 id="execute-setup-script">Execute Setup Script
&lt;/h2>&lt;p>Navigate into the cloned folder and execute the &lt;code>setup.sh&lt;/code> file provided:&lt;/p>
&lt;pre>&lt;code>sudo bash ./setup.sh
&lt;/code>&lt;/pre>
&lt;h2 id="download-os-iso">Download OS ISO
&lt;/h2>&lt;p>Download the latest ISO of the OS you want to virtualize. For this example, let&amp;rsquo;s use Windows 10 from &lt;a class="link" href="https://www.microsoft.com/de-de/software-download/windows10ISO" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;h2 id="create-virtual-machine">Create Virtual Machine
&lt;/h2>&lt;p>Open your virtual machine manager and create a new virtual machine. Choose the downloaded ISO, follow the setup steps, and before finishing, check &amp;ldquo;Customize configuration.&amp;rdquo; Configure the following options:&lt;/p>
&lt;ul>
&lt;li>Boot: &lt;code>/usr/share/OVMF/OVMF_CODE_4M.fd&lt;/code>&lt;/li>
&lt;li>Chipset: &amp;ldquo;Q35&amp;rdquo;&lt;/li>
&lt;li>CPU: 1 socket, X number of cores, 2 threads&lt;/li>
&lt;li>Allocate 2 GB less RAM than you have&lt;/li>
&lt;li>Set your virtual disk&amp;rsquo;s cache mode to writeback&lt;/li>
&lt;/ul>
&lt;h2 id="windows-only">(Windows only)
&lt;/h2>&lt;p>Download Virtio drivers and add them as a disk to your virtual setup. These drivers are necessary for Windows; most other OSs have them built-in.&lt;/p>
&lt;h2 id="install-os">Install OS
&lt;/h2>&lt;p>Install the OS, then shut down the virtual machine.&lt;/p>
&lt;h2 id="retrieve-gpu-bios">Retrieve GPU BIOS
&lt;/h2>&lt;p>Retrieve your GPU&amp;rsquo;s BIOS. You can conveniently download it &lt;a class="link" href="https://www.techpowerup.com/vgabios/" target="_blank" rel="noopener"
>here&lt;/a>, or use various programs to dump your GPU BIOS:&lt;/p>
&lt;ul>
&lt;li>Nvidia: NVIDIA NVFlash&lt;/li>
&lt;li>AMD: ATI ATIFlash&lt;/li>
&lt;/ul>
&lt;h2 id="add-gpu-rom">Add GPU ROM
&lt;/h2>&lt;p>Place the GPU ROM in the following directory:&lt;/p>
&lt;pre>&lt;code> sudo mkdir /usr/share/vgabios
cp ./patched.rom /usr/share/vgabios/
cd /usr/share/vgabios
sudo chmod -R 644 patched.rom
sudo chown yourusername:yourusername patched.rom
&lt;/code>&lt;/pre>
&lt;p>Replace &amp;ldquo;yourusername&amp;rdquo; with your actual username.&lt;/p>
&lt;h2 id="configure-virtual-machine">Configure Virtual Machine
&lt;/h2>&lt;p>Remove any spice/qxl components in your virtual machine setup and add your GPU to the PCI section. You should have two devices for your GPU, so add both.&lt;/p>
&lt;h2 id="edit-gpu-xml">Edit GPU XML
&lt;/h2>&lt;p>Enable XML editing in the settings of your virtual machine manager and insert &lt;code>&amp;lt;rom file='/var/lib/libvirt/vgabios/patched.rom'/&amp;gt;&lt;/code> into both of your GPU devices&amp;rsquo; XMLs, between &amp;ldquo;source&amp;rdquo; and &amp;ldquo;address.&amp;rdquo;&lt;/p>
&lt;h2 id="add-devices">Add Devices
&lt;/h2>&lt;p>Add your PCI host controller, audio controller, and any other devices you want to include.&lt;/p>
&lt;h2 id="modify-qemu-file">Modify QEMU File
&lt;/h2>&lt;p>Check the &lt;code>/etc/libvirt/hooks/qemu&lt;/code> file and edit the name of the placeholder &amp;ldquo;win10&amp;rdquo; to match your virtual machine&amp;rsquo;s name. You can also add new sections by copying the existing one below it and editing the name.&lt;/p>
&lt;h1 id="conclusion">Conclusion
&lt;/h1>&lt;p>If everything worked as expected, you now have an awesome setup that can run virtually any OS. You can enjoy gaming on Windows, code on your favorite Linux distribution, and maybe even tinker with BSD somehow. It&amp;rsquo;s all at your fingertips now.&lt;/p></description></item><item><title>Improved Wayland Screen Sharing</title><link>https://comfytechcorner.de/p/wayland-streaming/</link><pubDate>Thu, 19 Oct 2023 10:00:00 +0000</pubDate><guid>https://comfytechcorner.de/p/wayland-streaming/</guid><description>&lt;img src="https://comfytechcorner.de/p/wayland-streaming/cover.png" alt="Featured image of post Improved Wayland Screen Sharing" />&lt;h1 id="how-to-use-x-apps-that-cannot-capture-your-screen-on-wayland">How to Use x Apps That Cannot Capture Your Screen on Wayland
&lt;/h1>&lt;p>Gone are the days when you couldn&amp;rsquo;t stream your screen on apps like Discord. Let me introduce you to a nifty tool called xwaylandvideobridge. It&amp;rsquo;s incredibly straightforward to set up and packs a punch in terms of functionality. So, grab a cup of tea, take a seat, and i will accompany you on this journey of seamless screen sharing with your friends on a modern graphics stack.&lt;/p>
&lt;h2 id="installation">Installation
&lt;/h2>&lt;h3 id="step-1-downloading">Step 1 Downloading
&lt;/h3>&lt;ol>
&lt;li>First, head over to &lt;a class="link" href="https://invent.kde.org/system/xwaylandvideobridge" target="_blank" rel="noopener"
>xwaylandvideobridge on KDE GitLab&lt;/a>.&lt;/li>
&lt;li>On the left sidebar, click on &amp;ldquo;CI/CD.&amp;rdquo;&lt;/li>
&lt;li>Download the latest Flatpak archive artifact and unzip it. (Note: If the latest release doesn&amp;rsquo;t have any artifacts, proceed with the a older Release.)&lt;/li>
&lt;/ol>
&lt;h3 id="step-2-installing">Step 2 Installing
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>Ensure you have Flatpak and Flathub installed. (If you haven&amp;rsquo;t, visit &lt;a class="link" href="https://flathub.org/setup" target="_blank" rel="noopener"
>Flathub setup&lt;/a>.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open a terminal and navigate to your Downloads Folder.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">flatpak install xwaylandvideobridge.flatpak
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>If prompted, type &amp;lsquo;Y&amp;rsquo; and enter your password when necessary.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once the installation is complete, you can launch the program by running:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">flatpak run org.kde.xwaylandvideobridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="step-3-autostart-optional">Step 3 Autostart (optional)
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>You can create a new text file named &amp;ldquo;videobridge.sh.&amp;rdquo; You can do this using a text editor or through the command line. For instance, in the terminal, you can use the following command to create the file:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">touch videobridge.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Open the &amp;ldquo;videobridge.sh&amp;rdquo; file with a text editor of your choice, such as nano, vim, or gedit. For example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nano videobridge.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>In the &amp;ldquo;videobridge.sh&amp;rdquo; file, insert the following line:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">flatpak run org.kde.xwaylandvideobridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Save and close the file in your text editor. If you&amp;rsquo;re using nano, you can save by pressing Ctrl + O, then press Enter, and exit by pressing Ctrl + X.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Now, you&amp;rsquo;ll need to add the &amp;ldquo;videobridge.sh&amp;rdquo; script to your desktop environment&amp;rsquo;s autostart configuration. The process may vary depending on your desktop environment.&lt;/p>
&lt;p>In KDE:&lt;/p>
&lt;ul>
&lt;li>Open &amp;ldquo;System Settings.&amp;rdquo;&lt;/li>
&lt;li>Navigate to &amp;ldquo;Startup and Shutdown.&amp;rdquo; &amp;gt; &amp;ldquo;Autostart&amp;rdquo;&lt;/li>
&lt;li>Click &amp;ldquo;Add Script.&amp;rdquo;&lt;/li>
&lt;li>Browse and select the &amp;ldquo;videobridge.sh&amp;rdquo; script you created.&lt;/li>
&lt;li>Save your changes, and the script will run automatically with every session.&lt;/li>
&lt;/ul>
&lt;p>For other desktop environments or window managers, there are similar ways to accomplish this.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="how-to-use-it">How to Use It
&lt;/h2>&lt;p>Once you&amp;rsquo;ve started the application, every time you attempt to capture a window or your screen, a window will appear where you can choose the source of the video stream. After selecting one, xwaylandvideobridge should display a window that you can capture in the program you are using. I&amp;rsquo;ve mainly tested this with Discord, and it works virtually bug-free with excellent performance. Give it a try!&lt;/p></description></item></channel></rss>